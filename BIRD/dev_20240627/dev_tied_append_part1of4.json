[
    {
        "question_id": 37,
        "db_id": "california_schools",
        "question_en": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "question_ar": "",
        "evidence_en": "Execellence Rate = NumGE1500 / NumTstTakr; complete address has Street, City, Zip, State",
        "evidence_ar": "",
        "SQL": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM schools AS T2 INNER JOIN (SELECT cds, CAST(NumGE1500 AS REAL) / NumTstTakr AS rate FROM satscores WHERE NumGE1500 IS NOT NULL AND NumTstTakr IS NOT NULL AND NumTstTakr != 0) AS T1 ON T2.CDSCode = T1.cds WHERE T1.rate = (SELECT MIN(CAST(NumGE1500 AS REAL) / NumTstTakr) AS min_rate FROM satscores WHERE NumGE1500 IS NOT NULL AND NumTstTakr IS NOT NULL AND NumTstTakr != 0) ORDER BY T2.CDSCode",
        "difficulty": "moderate"
    },
    {
        "question_id": 68,
        "db_id": "california_schools",
        "question_en": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "question_ar": "",
        "evidence_en": "Youth Authority Facilities (CEA) refers to SOC = 11; 1980s = years between 1980 and 1989",
        "evidence_ar": "",
        "SQL": "SELECT County FROM (SELECT County, COUNT(School) AS SchoolCount FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County) WHERE SchoolCount = (SELECT MAX(SchoolCount) FROM (SELECT COUNT(School) AS SchoolCount FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County))",
        "difficulty": "moderate"
    },
    {
        "question_id": 80,
        "db_id": "california_schools",
        "question_en": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
        "question_ar": "",
        "evidence_en": "",
        "evidence_ar": "",
        "SQL": "SELECT T1.`School Type`, T1.`School Name`, T2.Latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Latitude = (SELECT MAX(Latitude) FROM schools)",
        "difficulty": "simple"
    },
    {
        "question_id": 81,
        "db_id": "california_schools",
        "question_en": "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
        "question_ar": "",
        "evidence_en": "State of California refers to state = 'CA'",
        "evidence_ar": "",
        "SQL": "SELECT T2.City, T1.`Low Grade`, T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.State = 'CA' AND T2.Latitude IS NOT NULL AND T2.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA' AND Latitude IS NOT NULL)",
        "difficulty": "moderate"
    },
    {
        "question_id": 82,
        "db_id": "california_schools",
        "question_en": "What is the grade span offered in the school with the highest longitude?",
        "question_ar": "",
        "evidence_en": "",
        "evidence_ar": "",
        "SQL": "SELECT GSoffered FROM schools WHERE ABS(longitude) = (SELECT MAX(ABS(longitude)) FROM schools)",
        "difficulty": "simple"
    },
    {
        "question_id": 101,
        "db_id": "financial",
        "question_en": "List out the accounts who have the earliest trading date in 1995 ?",
        "question_ar": "",
        "evidence_en": "",
        "evidence_ar": "",
        "SQL": "SELECT account_id FROM trans WHERE STRFTIME('%Y', date) = '1995' ORDER BY date ASC LIMIT 1",
        "difficulty": "simple"
    },
    {
        "question_id": 189,
        "db_id": "financial",
        "question_en": "Name the account numbers of female clients who are oldest and have lowest average salary?",
        "question_ar": "",
        "evidence_en": "Female refers to 'F' in the gender; A11 contains information about average salary",
        "evidence_ar": "",
        "SQL": "SELECT T3.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN account AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND T2.A11 = (SELECT MIN(T2.A11) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F'))",
        "difficulty": "moderate"
    },
    {
        "question_id": 244,
        "db_id": "toxicology",
        "question_en": "Is the molecule with the most double bonds carcinogenic?",
        "question_ar": "",
        "evidence_en": "double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic",
        "evidence_ar": "",
        "SQL": "SELECT T1.label FROM molecule AS T1 INNER JOIN (SELECT T.molecule_id, COUNT(T.bond_type) AS bond_count FROM bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id HAVING bond_count = (SELECT MAX(bond_count) FROM (SELECT molecule_id, COUNT(bond_type) AS bond_count FROM bond WHERE bond_type = '=' GROUP BY molecule_id) AS subquery) ORDER BY bond_count DESC) AS T2 ON T1.molecule_id = T2.molecule_id",
        "difficulty": "moderate"
    },
    {
        "question_id": 250,
        "db_id": "toxicology",
        "question_en": "Of all the carcinogenic molecules, which one has the most double bonds?",
        "question_ar": "",
        "evidence_en": "label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';",
        "evidence_ar": "",
        "SQL": "SELECT T.molecule_id FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS bond_count FROM bond AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+' AND T1.bond_type = '=' GROUP BY T3.molecule_id HAVING bond_count = (SELECT MAX(bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS bond_count FROM bond AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+' AND T1.bond_type = '=' GROUP BY T3.molecule_id) AS subquery) ORDER BY bond_count DESC) AS T",
        "difficulty": "moderate"
    },
    {
        "question_id": 342,
        "db_id": "card_games",
        "question_en": "List the card names with value that cost more converted mana for the face.",
        "question_ar": "",
        "evidence_en": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "evidence_ar": "",
        "SQL": "SELECT name FROM cards WHERE faceConvertedManaCost IS NOT NULL AND faceConvertedManaCost = (SELECT MAX(faceConvertedManaCost)  FROM cards  WHERE faceConvertedManaCost IS NOT NULL)",
        "difficulty": "simple"
    },
    {
        "question_id": 432,
        "db_id": "card_games",
        "question_en": "Which Russian set of cards contains the most cards overall?",
        "question_ar": "",
        "evidence_en": "Russian refers to language = 'Russian'; contains the most cards overall refers to MAX(baseSetSize)",
        "evidence_ar": "",
        "SQL": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' GROUP BY T1.baseSetSize HAVING COUNT(T1.id) = (SELECT MAX(card_count) FROM (SELECT COUNT(T1.id) AS card_count FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' GROUP BY T1.baseSetSize) AS subquery)",
        "difficulty": "moderate"
    }
]